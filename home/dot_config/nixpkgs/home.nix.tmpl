{ config, pkgs, ... }:

{
  # Home Manager needs a bit of information about you and the
  # paths it should manage.
  home.username = "{{ .nix.username }}";
  home.homeDirectory = "{{ .nix.home_directory }}";

  dconf.settings = {
    "org/gnome/desktop/calendar" = {
      show-weekdate = true;
    };
    "org/gnome/desktop/interface" = {
      color-scheme = "prefer-dark";
      clock-show-seconds = true;
      clock-show-weekday = true;
      gtk-theme = "Adwaita-dark";
      show-battery-percentage = true;
      text-scaling-factor = 1.10;
    };
    "org/gnome/desktop/sound" = {
      events-sound = false;
    };
  };

  # Packages that should be installed to the user profile.
  home.packages = with pkgs; [
    chezmoi
    gopass
    jq

    gnomeExtensions.applications-menu
    gnomeExtensions.disconnect-wifi
    gnomeExtensions.openweather
    gnomeExtensions.places-status-indicator
    gnomeExtensions.removable-drive-menu
    gnomeExtensions.sound-output-device-chooser
    gnomeExtensions.user-themes
    gnomeExtensions.vitals
    gnomeExtensions.workspace-indicator

{{- if .aws.enable }}
    awscli2
{{- end }}
{{- if .terraform }}
    terraform
    doctl
{{- end }}
{{- if .nodejs }}
    nodejs
{{- end }}
{{- if .kubernetes }}
    kubectl
    kustomize
    kubernetes-helm
{{- end }}
{{- if .java }}
    maven
    adoptopenjdk-bin
{{- end }}
{{- if .hugo }}
    hugo
{{- end }}
{{- if .github }}
    gh
{{- end }}
{{- if .ruby }}
    ruby
{{- end }}
  ];

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "22.05";

  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;
}
