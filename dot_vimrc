set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" vundle plugins {
" to install: vim +BundleInstall +qall
" to update:  vim +PluginUpdate +qall
Plugin 'VundleVim/Vundle.vim'

" git
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" code
Plugin 'othree/yajs.vim'
Plugin 'othree/html5.vim'
Plugin 'plasticboy/vim-markdown'
Plugin 'posva/vim-vue'

" rust
Plugin 'rust-lang/rust.vim'

" code completion (req. vim-gtk package)
" compile in ~/.vim/bundle/YouCompleteMe with install.py
Plugin 'Valloric/YouCompleteMe'

" make framework
Plugin 'neomake/neomake'

" comment
Plugin 'chrisbra/vim-commentary'

" latex (requires latexmk installed)
Plugin 'lervag/vimtex'

" draw
Plugin 'DrawIt'

" bad whitespaces
Plugin 'bitc/vim-bad-whitespace'

" airline
" requires patched powerline font
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" hex
Plugin 'fidian/hexmode'

call vundle#end()
" }

" redefine tab as 2 spaces
filetype plugin indent on
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" enable autoindent on new line
set autoindent

" enable syntax highlighting
syntax enable

" use shift-tab for unindent
nnoremap <S-Tab> <<
inoremap <S-Tab> <C-d>

" show line numbers
set number

" vim-airline plugin {
" // fix font issues with powerline and airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
" }

" markdown plugin {
" // disable text folding
let g:vim_markdown_folding_disabled = 1
" }

" latex plugin {
let g:vimtex_disable_version_warning = 1
let g:vimtex_compiler_latexmk = {'callback' : 0}
" }

" neomake {
let g:neomake_open_list = 2
" }

" hexmode {
let g:hexmode_patterns = '*.bin,*.exe,*.dll,*.elf,*.sys,*.dat,*.o'
" }

" vim settings for wine source tree
" see: https://wiki.winehq.org/Vim_Tips
if !exists("loaded_vimrc_autocmd")
  let loaded_vimrc_autocmd=1
  autocmd BufNewFile,BufRead ~/wine/src/* set expandtab tabstop=8 softtabstop=4 shiftwidth=4 | hi link cCommentL cError
endif
" convert strings to C character arrays
:vmap ,c "zda{<C-R>=substitute(substitute(@z, '\(.\)', "'\\1',", "g"), "'\\(['\\\\]\\)'", "'\\\\\\1'", "g")<CR><ESC>a'\0'}<ESC>

" See https://github.com/gopasspw/gopass/blob/master/docs/setup.md#securing-your-editor
au BufNewFile,BufRead /dev/shm/gopass.* setlocal noswapfile nobackup noundofile
